<!DOCTYPE html>
<html>

<head></head>

<body>SCORE:
<input id="lblScore" type="text"/>
<br/>
TIME:
<input id="lblTime" type="text"/>
<br/>
<canvas id="canvas" height="600" width="600"></canvas>


<script type="text/javascript">

    var context = canvas.getContext("2d");
    var shape = new Object();
    var board;
    var score;
    var pac_color;
    var start_time;
    var time_elapsed;
    var interval;
    var from_big_circle;//The start of the pacman circle
    var to_big_circle;//The end of the pacman circle
    var eye_center_x;//The x location of the pacman's eye relative to the pacman's center
    var eye_center_y;//The y location of the pacman's eye relative to the pacman's center
    var init;//True iff the pacman hasn't been drawn yet
    Start();

    function Start() {
        board = new Array();
        score = 0;
        
        init = true;
    
        pac_color = "yellow";
        var cnt = 100;
        var food_remain = 50;
        var pacman_remain = 1;
        start_time = new Date();
        for (var i = 0; i < 10; i++) {
            board[i] = new Array();
            //put obstacles in (i=3,j=3) and (i=3,j=4) and (i=3,j=5), (i=6,j=1) and (i=6,j=2)
            for (var j = 0; j < 10; j++) {
                if ((i === 3 && j === 3) || (i === 3 && j === 4) || (i === 3 && j === 5) || (i === 6 && j === 1) || (i === 6 && j === 2)) {
                    board[i][j] = 4;
                } else {
                    var randomNum = Math.random();
                    if (randomNum <= 1.0 * food_remain / cnt) {
                        food_remain--;
                        board[i][j] = 1;
                    } else if (randomNum < 1.0 * (pacman_remain + food_remain) / cnt) {
                        shape.i = i;
                        shape.j = j;
                        pacman_remain--;
                        board[i][j] = 2;
                    } else {
                        board[i][j] = 0;
                    }
                    cnt--;
                }
            }
        }
        while (food_remain > 0) {
            var emptyCell = findRandomEmptyCell(board);
            board[emptyCell[0]][emptyCell[1]] = 1;
            food_remain--;
        }
        keysDown = {};
        addEventListener("keydown", function (e) {
            keysDown[e.code] = true;
        }, false);
        addEventListener("keyup", function (e) {
            keysDown[e.code] = false;
        }, false);
        interval = setInterval(UpdatePosition, 100);
    }


    function findRandomEmptyCell(board) {
        var i = Math.floor((Math.random() * 9) + 1);
        var j = Math.floor((Math.random() * 9) + 1);
        while (board[i][j] !== 0) {
            i = Math.floor((Math.random() * 9) + 1);
            j = Math.floor((Math.random() * 9) + 1);
        }
        return [i, j];
    }

    /**
     * @return {number}
     */
    function GetKeyPressed() {
        if (keysDown['ArrowUp']) {
            return 1;
        }
        if (keysDown['ArrowDown']) {
            return 2;
        }
        if (keysDown['ArrowLeft']) {
            return 3;
        }
        if (keysDown['ArrowRight']) {
            return 4;
        }
    }

    //This fucntioon will set all the parameters that are responsinble for the drawing of the pacman in a certain direction
    function setPackManParam(key_pressed)
    {
        //Down
        if(key_pressed==2)
        {
            
            from_big_circle= 0.65 * Math.PI;
            to_big_circle = 0.35 * Math.PI;
            eye_center_y = 5;
            eye_center_x= 15;
            pac_color = "red";
        }
        else
        {

            //Left      
            if(key_pressed==3)
            {
                from_big_circle= 1.15 * Math.PI;
                to_big_circle = 0.85 * Math.PI;
                eye_center_x = -5;
                eye_center_y = -15;
                pac_color = "green";
            }
            else
            {
                //Up
                if(key_pressed==1)
                {
                    from_big_circle= 1.65 * Math.PI;
                    to_big_circle = 1.35 * Math.PI;
                    eye_center_y = -5;
                    eye_center_x = -15;
                    pac_color = "blue";
                }
                else
                {
                    //Right
                    if(key_pressed==4)
                    {
                        from_big_circle= 0.15 * Math.PI;
                        to_big_circle = 1.85 * Math.PI;
                        eye_center_x = 5;
                        eye_center_y=-15;
                        pac_color = "pink";
                    }
                }
            }
        }

                    
    }
    function Draw() {
       
        context.clearRect(0, 0, canvas.width, canvas.height); //clean board
        lblScore.value = score;
        lblTime.value = time_elapsed;
        for (var i = 0; i < 10; i++) {
            for (var j = 0; j < 10; j++) {
                var center = new Object();
                center.x = i * 60 + 30;
                center.y = j * 60 + 30;
                if (board[i][j] === 2) {
                    
                    var key_pressed = GetKeyPressed();
                    if(init == true)
                    {
                        key_pressed = 4;
                        init = false;
                    }
                    setPackManParam(key_pressed)
                    context.beginPath();
                    context.arc(center.x, center.y, 30, from_big_circle, to_big_circle); // half circle
                    context.lineTo(center.x, center.y);
                    context.fillStyle = pac_color; //color
                    context.fill();
                    context.beginPath();
                    context.arc(center.x + eye_center_x, center.y + eye_center_y, 5, 0, 2 * Math.PI); // circle
                    context.fillStyle = "black"; //color
                    context.fill();
                } else if (board[i][j] === 1) {
                    context.beginPath();
                    context.arc(center.x, center.y, 15, 0, 2 * Math.PI); // circle
                    context.fillStyle = "black"; //color
                    context.fill();
                } else if (board[i][j] === 4) {
                    context.beginPath();
                    context.rect(center.x - 30, center.y - 30, 60, 60);
                    context.fillStyle = "grey"; //color
                    context.fill();
                }
            }
        }


    }

    function UpdatePosition() {
        board[shape.i][shape.j] = 0;
        var x = GetKeyPressed();
        //Up
        if (x === 1) {
            if (shape.j > 0 && board[shape.i][shape.j - 1] !== 4) {
                shape.j--;
                
            }
        }
        //Down
        if (x === 2) {
            if (shape.j < 9 && board[shape.i][shape.j + 1] !== 4) {
                shape.j++;
            }
        }
        //Left
        if (x === 3) {
            if (shape.i > 0 && board[shape.i - 1][shape.j] !== 4) {
                shape.i--;
            }
        }
        //Right
        if (x === 4) {
            if (shape.i < 9 && board[shape.i + 1][shape.j] !== 4) {
                shape.i++;
            }
        }
        if (board[shape.i][shape.j] === 1) {
            score++;
        }
        board[shape.i][shape.j] = 2;
        var currentTime = new Date();
        time_elapsed = (currentTime - start_time) / 1000;
        if (score >= 20 && time_elapsed <= 10) {
            pac_color = "green";
        }
        if (score === 50) {
            window.clearInterval(interval);
            window.alert("Game completed");
        } else {
            Draw();
        }
    }
</script>
</body>

</html>
